version: '3.8'

services:
  auth_service:
    build:
      context: ./auth_service
      dockerfile: Dockerfile
    container_name: auth_service
    ports:
      - "8001:8001"
    networks:
      - app-network
    depends_on:
      - db_auth
      - redis

  db_auth:
    image: postgres:13
    container_name: db_auth
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123
      POSTGRES_DB: auth_db
    networks:
      - app-network
    ports:
      - "5433:5432"
    volumes:
      - db_auth_data:/var/lib/postgresql/data

  event_service:
    build:
      context: ./event_service
      dockerfile: Dockerfile
    container_name: event_service
    ports:
      - "8002:8002"
    networks:
      - app-network
    depends_on:
      - db_event
      - redis

  db_event:
    image: postgres:13
    container_name: db_event
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123
      POSTGRES_DB: event_db
    networks:
      - app-network
    ports:
      - "5434:5432"
    volumes:
      - db_event_data:/var/lib/postgresql/data

  redis:
    image: redis:6
    container_name: redis
    networks:
      - app-network
    ports:
      - "6380:6379"

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - app-network

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - "3000:3000"
    networks:
      - app-network
    depends_on:
      - prometheus

  rabbitmq:
    image: rabbitmq:management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - ./rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf
    networks:
      - app-network

  celery_worker:
    build:
      context: ./event_service
      dockerfile: Dockerfile
    command: [ "/wait-for-it.sh", "rabbitmq:5672", "--", "celery", "-A", "app.celery_config.celery_app", "worker", "--loglevel=info" ]
    networks:
      - app-network
    depends_on:
      - rabbitmq
      - db_event

networks:
  app-network:
    driver: bridge

volumes:
  db_auth_data:
  db_event_data:
